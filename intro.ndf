set "diagram ;

A gets 'hello' ;
B gets 'world' ;
A_B := A B ;
Numbers := 45.2 3.7 -35.3 87.14 ;
SumNumbers := sum Numbers ;
TallyNumbers := tally Numbers ;
LinkAB := link A ' ' B ;
NumsHello := (count 5) 'hello' ;

% Create table ;
Table := 3 4 reshape count 12 ;

% Rows are cols ;
TransTable := transpose Table ;

% Cols ;
TableCols := cols Table ;

% Rows ;
TableRows := rows Table ;

% Corresponding elements ;
PackTableRows := pack TableRows ;

% Define operation ;
average IS OPERATION A { sum A / tally A }

% Three dimensional array ;
TDA gets 2 3 4 reshape count 24 ;

% List of tables ;
LOT gets 1 raise TDA ;

% Table of lists ;
TOL gets 2 raise TDA ;

% Reverse list ;
Rev_LOT gets reverse LOT ;

% Reverse each element ;
Rev_LOT_items gets EACH reverse LOT ;

% Undo raise with mix ;
TDA1 := mix LOT ;
TDA2 := mix TOL ;

Data gets 3 3 reshape 23 34 12 38 18 26 37 13 42 ;
Corner := phrase 'Crop Yields' ;
Collab := "Oats "Rice "Corn ;
Rowlab := EACH phrase 'None' 'Arsenic' 'Old Lace' ;

labeltable IS OPERATION Corner Rowlabel Columnlabel Table {
	% Combine the labels ;
	Firstrow := Corner hitch Columnlabel ;
	% Hitch labels to the rows ;
	Labelledrows := Rowlabel EACHBOTH hitch rows Table ;
	% Hitch labels to the rows and mix ;
	mix ( Firstrow hitch Labelledrows ) }


Result := labeltable Corner Rowlab Collab Data ;

X := 2 3 reshape (8 9) 23 'hello world' "goodbye (tell 3 2) ([sin,cos]0.5) ;

% 2 3 ;
Shape_X := shape X ;
% 2 ;
Valence_X := valence X ;
% 2 * 3 = 6 ;
Tally_X := tally X ;

Notation_1 := 2 3 reshape 4 5 6 7 8 9 ;
Notation_2 := reshape ((2 3)(4 5 6 7 8 9)) ;

% 2 4 ;
Firsts := (EACH first)((2 3)(4 5 6 7 8 9)) ;

% 2 15 ;
Example_sum := 2 3 4 EACH first sum 4 5 6 ;

% Bracket notation ;
Ex_1 := [34,275,86,-52] ;
Ex_2 := [] ;

% Atlas ;
Atlas := [sin,cos,sqrt] 3.14 ;

average2 IS / [sum,tally]

T := 3 4 reshape count 12 ;

% Grid adresses ;
Grid_example := grid T ;

Elem_1 := 1 2 pick T ;

C := count 5 ;

% Last element ;
Elem_2 := 4 pick C ;
Elem_3 := [4] pick C ;

% Multiple items ;
Mult := [1 2,2 3,0 0] choose T ;

% Indexing notation ;
Elem_4 := T@(1 2) ;



